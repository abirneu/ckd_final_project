# Generated by Django 5.1.2 on 2025-07-16 10:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('test_ckd', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='patient',
            options={'ordering': ['-created_at'], 'verbose_name': 'Patient', 'verbose_name_plural': 'Patients'},
        ),
        migrations.RemoveField(
            model_name='patient',
            name='id',
        ),
        migrations.AddField(
            model_name='patient',
            name='albumin',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='bacteria',
            field=models.CharField(blank=True, choices=[('present', 'Present'), ('notpresent', 'Not Present')], max_length=10),
        ),
        migrations.AddField(
            model_name='patient',
            name='blood_glucose',
            field=models.FloatField(blank=True, null=True, verbose_name='Blood Glucose (mg/dL)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='blood_urea',
            field=models.FloatField(blank=True, null=True, verbose_name='Blood Urea (mg/dL)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='coronary_artery_disease',
            field=models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=3),
        ),
        migrations.AddField(
            model_name='patient',
            name='hemoglobin',
            field=models.FloatField(blank=True, null=True, verbose_name='Hemoglobin (g/dL)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='packed_cell_volume',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='potassium',
            field=models.FloatField(blank=True, null=True, verbose_name='Potassium (mEq/L)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='pus_cell',
            field=models.CharField(blank=True, choices=[('normal', 'Normal'), ('abnormal', 'Abnormal')], max_length=10),
        ),
        migrations.AddField(
            model_name='patient',
            name='pus_cell_clumps',
            field=models.CharField(blank=True, choices=[('present', 'Present'), ('notpresent', 'Not Present')], max_length=10),
        ),
        migrations.AddField(
            model_name='patient',
            name='red_blood_cell',
            field=models.FloatField(blank=True, null=True, verbose_name='RBC (millions/cmm)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='red_blood_cells',
            field=models.CharField(blank=True, choices=[('normal', 'Normal'), ('abnormal', 'Abnormal')], max_length=10),
        ),
        migrations.AddField(
            model_name='patient',
            name='serum_creatinine',
            field=models.FloatField(blank=True, null=True, verbose_name='Serum Creatinine (mg/dL)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='sodium',
            field=models.FloatField(blank=True, null=True, verbose_name='Sodium (mEq/L)'),
        ),
        migrations.AddField(
            model_name='patient',
            name='specific_gravity',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(1.03)]),
        ),
        migrations.AddField(
            model_name='patient',
            name='sugar',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='white_blood_cell',
            field=models.FloatField(blank=True, null=True, verbose_name='WBC (cells/cmm)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='age',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)]),
        ),
        migrations.AlterField(
            model_name='patient',
            name='lower_bp',
            field=models.PositiveIntegerField(verbose_name='Lower BP (mmHg)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone',
            field=models.CharField(error_messages={'unique': 'A patient with this phone number already exists.'}, max_length=11, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be a valid Bangladeshi mobile number (e.g. 01712345678)', regex='^01[3-9]\\d{8}$')]),
        ),
        migrations.AlterField(
            model_name='patient',
            name='upper_bp',
            field=models.PositiveIntegerField(verbose_name='Upper BP (mmHg)'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('reg', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('user_type', models.CharField(choices=[('doctor', 'Doctor'), ('staff', 'Staff')], max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
